version: 0.2

env:
  variables:
    PACKAGE: "gitlab.com"

phases:

  install:
    commands:

      # AWS Codebuild Go images use /go for the $GOPATH so let's copy our 
      # application source code into that directory structure.
      - mkdir -p "/go/src/$(dirname ${PACKAGE})"
      - ln -s "${CODEBUILD_SRC_DIR}" "/go/src/${PACKAGE}" 
      
      #set go essentials
      - go env -w GOPRIVATE="gitlab.com/pro-tracker"
      
      #set git essentials
      - git config --global url."https://git-codecommit.us-east-1.amazonaws.com/v1/repos/pro-tracker".insteadOf "https://gitlab.com/pro-tracker"
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true

      # Install golint
      - go get -u golang.org/x/lint/golint

       # Print all environment variables (handy for AWS CodeBuild logs)
      - env

  pre_build: 
    commands:
        
      # Make sure we're in the project directory within our GOPATH
      - cd "/go/src/gitlab.com"
      - pwd

      #clone repo first
      - git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/pro-tracker

      # Fetch all dependencies
      - cd pro-tracker/tracker
      - go mod download

      # Ensure code passes all lint tests
      - golint -set_exit_status

      # Check the Go code for common problems with 'go vet'
      - go vet .

      # Run all tests included with our application
      - go test .

  build:
    commands:

      # Build our go application
      - go build -o main
      - pwd
      - ls -lrt
      # Package our application with AWS Serverless
      #- aws cloudformation package --template-file serverless.yml --s3-bucket ${S3_BUCKET} --output-template-file temp.yml

artifacts:
    files:
    - "pro-tracker/tracker/main"
    - "pro-tracker/tracker/config/*"

